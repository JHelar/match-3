{"code":"!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";var i;n.r(t),function(e){e[e.INPUT=1]=\"INPUT\",e[e.MATCH=2]=\"MATCH\",e[e.DROP=3]=\"DROP\",e[e.DROPPING=4]=\"DROPPING\",e[e.SHUFFLE=5]=\"SHUFFLE\",e[e.SWAPPING=6]=\"SWAPPING\",e[e.PAUSED=7]=\"PAUSED\",e[e.MATCHING=8]=\"MATCHING\"}(i||(i={}));const o=[\"red\",\"green\",\"yellow\",\"blue\"],l=(()=>{let e=i.PAUSED;return{get CURRENT(){return e},set CURRENT(t){console.debug(\"OLD STATE: %s \\nNEW STATE: %s\",e,t),e=t}}})(),r=document.getElementById(\"game\"),s=document.querySelector(\"#tile\"),c=document.querySelector(\"#node\"),d=e=>(e.element.dataset.tileExplode=\"true\",m(e,!0),a(e,!0),u(e,void 0,.25),new Promise(t=>{setTimeout(()=>{a(e,!1),f(e),e.element.dataset.tileExplode=\"false\",e.type=\"empty\",t()},250)})),u=(e,t,n)=>{const i=n||(Math.abs(e.row-t||0)+1)/8*1;return Object.assign(e,{animationDuration:i})},a=(e,t)=>(e.element.style.transitionDuration=t?`${e.animationDuration}s`:\"0s\",Object.assign(e,{animate:t})),p=(e,t)=>(e.element.dataset.tileType=t,Object.assign(e,{type:t})),m=(e,t)=>Object.assign(e,{killed:t}),f=(e,t)=>(e.element.dataset.tileSpecial=t,Object.assign(e,{special:t})),y=(e,t,n)=>(t=null!=t?t:e.row,n=null!=n?n:e.column,e.element.style.setProperty(\"--y\",`${50*t+(4+4*t*2)}px`),e.element.style.setProperty(\"--x\",`${50*n+(4+4*n*2)}px`),Object.assign(e,{row:t,column:n})),E=(e,t,n)=>(a(e,!1),y(e,t,void 0),u(e,n,void 0),setTimeout(()=>{a(e,!0),y(e,n,void 0)},0),new Promise(t=>setTimeout(()=>{a(e,!1),t()},1e3*e.animationDuration))),x=()=>o[4*Math.random()|0],T=(e,t)=>t.reduce((t,n)=>t||n.find(t=>t.index===e),void 0),P=(e,t)=>e.forEach((e,n)=>e.forEach((e,i)=>t(e,n,i))),h=e=>!!e,N=(e,t)=>{let n=T(e.index-8,t)||void 0;return n&&\"empty\"===n.tile.type?N(n,t):n||void 0},g=(e,t,n)=>{const i=((e,t,n=\"empty\")=>{if(!s)throw new Error(\"No tiletemplate found!\");const i=s.content.cloneNode(!0).querySelector(\".tile\");if(!i)throw new Error('Cannot find \".tile\" in tiletemplate');i.dataset.tileType=n,i.innerHTML=\"\",i.style.setProperty(\"--y\",`${50*e+(4+4*e*2)}px`),i.style.setProperty(\"--x\",`${50*t+(4+4*t*2)}px`);return{element:i,animationDuration:1*(e+1/8),animate:!1,type:n,row:e,column:t,special:void 0,killed:!1}})(e,t,x());if(!c)throw new Error(\"No nodetemplate found\");const o=c.content.cloneNode(!0).querySelector(\".node\");if(!o)throw new Error('Cannot find \".node\" in nodetemplate');return o.dataset.nodeIndex=n.toString(),o.innerHTML=\"\",{element:o,index:n,tile:i,selected:!1}},w=(e,t)=>{const n=Object.assign({},e.tile);Object.assign(e.tile,t.tile),Object.assign(t.tile,n)},R=e=>{if(e)return Object.assign(e,{selected:!e.selected}),e.element.dataset.nodeSelected=e.selected?\"true\":\"false\",e.selected&&console.debug(`NODE SELECTED: ${JSON.stringify(e)}`),e},b=e=>(t,n)=>!(!t||!n)&&n.tile.type===e.tile.type,S=(e,t)=>{const n=[];if(e.tile.column+2<8){const i=[e,T(e.index+1,t),T(e.index+2,t)].filter(h);let o=void 0;if(3===i.length&&i.reduce(b(e),!0)){const l=T(e.index+3,t),r=T(e.index+4,t);l&&l.tile.row===e.tile.row&&[...i,l].reduce(b(e),!0)&&(i.push(l),o=\"striped\",r&&r.tile.row===e.tile.row&&[...i,r].reduce(b(e),!0)&&(i.push(r),o=\"super\")),n.push({nodes:i,special:o})}}if(e.tile.row+2<8){const i=[e,T(e.index+8,t),T(e.index+16,t)].filter(h);let o=void 0;if(3===i.length&&i.reduce(b(e),!0)){const l=T(e.index+24,t),r=T(e.index+32,t);l&&l.tile.column===e.tile.column&&[...i,l].reduce(b(e),!0)&&(i.push(l),o=\"striped\",r&&r.tile.column===e.tile.column&&[...i,r].reduce(b(e),!0)&&(i.push(r),o=\"super\")),n.push({nodes:i,special:o})}}return n},O=(e,t)=>{return[e,T(e.index+1,t),T(e.index+2,t),T(e.index-1,t),T(e.index-2,t),T(e.index-8,t),T(e.index-16,t),T(e.index+8,t),T(e.index+16,t)].filter(h)},C=(e,t)=>0===e.tile.column&&7!==t.tile.column||7===e.tile.column&&0!==t.tile.column,U=(e,t)=>{if(!e||!t)return!1;const n=Math.abs(e.index-t.index),i=0===e.tile.column||7===e.tile.column,o=0===t.tile.column||7===t.tile.column,l=C(e,t),r=C(t,e);return!(1!==n&&8!==n||(i||o)&&!l&&!r)},v=(e,t)=>{const n=[],i=0===e.index?0:e.index/8*8|0,o=i+8-1;console.debug({rowStartIndex:i,rowEndIndex:o});for(let e=i;e<=o;e++){const i=T(e,t);i&&!i.tile.killed&&n.push(d(i.tile))}return Promise.all(n).then(()=>void 0)},A=(e,t)=>{const n=[],i=e.index%8,o=i+56;console.debug({columnStartIndex:i,columnEndIndex:o});for(let e=i;e<=o;e+=8){const i=T(e,t);i&&!i.tile.killed&&n.push(d(i.tile))}return Promise.all(n).then(()=>void 0)},I=(e,t,n)=>!(!t||!U(e,t))&&(console.debug(`SWAP VALID: ${JSON.stringify(e)} <=> ${JSON.stringify(t)}`),w(t,e),!!((e,t,n)=>{return[...O(t,n),...O(e,n)].reduce((e,t)=>[...e,...S(t,n)],[]).length>0})(e,t,n)||(w(t,e),!1)),D=e=>t=>{if(t.target&&t.target.classList.contains(\"node\")){const n=t.target.dataset.nodeIndex;if(n){const t=T(parseInt(n),e);if(t){const n=(e=>e.reduce((e,t)=>e||t.find(e=>e.selected),void 0))(e);I(t,n,e)&&n?(l.CURRENT=i.SWAPPING,((e,t)=>{const n=Object.assign({},e);return u(t,void 0,.5),a(t,!0),u(e,void 0,.5),a(e,!0),y(e,t.row,t.column),y(t,n.row,n.column),new Promise(e=>{setTimeout(()=>{e()},500)})})(n.tile,t.tile).then(()=>{l.CURRENT=i.MATCH}),R(n)):(n&&R(n),R(t))}}}};console.debug=function(){},(()=>{const e=(()=>Array(8).fill(0).map((e,t)=>Array(8).fill(0).map((e,n)=>g(t,n,8*t+n))))(),t=()=>{switch(l.CURRENT){case i.DROP:l.CURRENT=i.DROPPING,(e=>{const t=[...e.map(e=>[...e])],n=[];return P(t.reverse(),t=>{if(t.tile.killed){const i=N(t,e),o=t.tile.row;if(m(t.tile,!1),i){const e=i.tile.type,l=i.tile.special;p(i.tile,t.tile.type),f(i.tile,t.tile.special),p(t.tile,e),f(t.tile,l),n.push(E(t.tile,i.tile.row,o))}else p(t.tile,x()),n.push(E(t.tile,t.tile.row-7,o))}}),Promise.all(n)})(e).then(()=>l.CURRENT=i.MATCH);break;case i.MATCH:l.CURRENT=i.MATCHING,(e=>{const t=new Set,n=[];P(e,n=>{S(n,e).forEach(e=>t.add(e))});const i=t.size>0;return t.forEach(t=>t.nodes.forEach((i,o)=>{if(t.special&&0===o)f(i.tile,t.special);else if(n.push(d(i.tile)),i.tile.special)switch(i.tile.special){case\"striped\":n.push(v(i,e)),n.push(A(i,e))}})),Promise.all(n).then(()=>i)})(e).then(t=>{t?l.CURRENT=i.DROP:(e=>{let t=!0;return P(e,n=>{t&&(t=![T(n.index+1,e),T(n.index+8,e)].map(e=>e&&U(n,e)).some(e=>!!e))}),t})(e)?l.CURRENT=i.SHUFFLE:l.CURRENT=i.INPUT});break;case i.INPUT:}l.CURRENT!==i.PAUSED&&window.requestAnimationFrame(t)};if(!r)throw new Error(\"No gameElement found!\");P(e,e=>{r.appendChild(e.element),r.appendChild(e.tile.element)});const n=D(e);return r.addEventListener(\"click\",e=>{l.CURRENT===i.INPUT&&n(e)}),{start:()=>{l.CURRENT=i.MATCH,window.requestAnimationFrame(t)},pause:()=>{l.CURRENT=i.PAUSED}}})().start()}]);","extractedComments":[]}